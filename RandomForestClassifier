
import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
%matplotlib notebook
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn import metrics


# %% [code]
data = pd.read_csv("../input/mnist-in-csv/mnist_train.csv")

# %% [code]
data.head()

# %% [code]
for i in range(1,17):
    plt.subplot(5,5,i)
    plt.imshow(np.reshape(np.array(data.iloc[i,1:]),(28,28)),cmap = 'gray')

# %% [code]
X = data.iloc[:,1:]
y = data['label']

# %% [code]
X_train, X_test, y_train, y_test = train_test_split(X,y,test_size = 0.25,random_state = 1)

# %% [code]
rfc = RandomForestClassifier(n_jobs = -1,n_estimators = 300)

# %% [code]
rfc.fit(X_train,y_train)

# %% [code]
pred = rfc.predict(X_test)

# %% [code]
metrics.accuracy_score(pred,y_test)

# %% [code]
rfc.score(X_test,y_test)

# %% [markdown]
# # **Test Data**

# %% [code]
test_data = pd.read_csv("../input/mnist-in-csv/mnist_test.csv")


# %% [code]
# for i in range(1,17):
#     plt.subplot(2,10,i)
#     plt.imshow(np.reshape(np.array(test_data.iloc[i,1:]),(28,28)),cmap = 'gray')
plt.figure()
for i in range(1,100):
    plt.subplot(10,10,i)
    plt.xlabel(i-1)
    plt.imshow(np.reshape(np.array(test_data.iloc[i-1,1:]),(28,28)),cmap = 'gray')

# %% [markdown]
# ##### test_data

# %% [code]
pred = rfc.predict(test_data.iloc[:,1:])

# %% [code]
# metrics.accuracy_score(y_test[:10000],pred)
for i in pred:
    print(i)
# print("Size:",pred.size)

# %% [code]
rfc.score(test_data.iloc[:,1:],pred)*100
